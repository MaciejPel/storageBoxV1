generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  username String   @unique
  password String   @db.String
  verified Boolean? @default(false)
  banned   Boolean? @default(false)

  createdCharacters Character[] @relation(name: "userCharacters")
  createdTags       Tag[]       @relation(name: "userTags")
  uploadedMedia     Media[]     @relation(name: "userMedia")
  likedMedia        Media[]     @relation(name: "userLikes")
}

model Character {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  authorId    String @db.ObjectId
  author      User   @relation(fields: [authorId], references: [id], name: "userCharacters")

  mainMedia   Media?  @relation(fields: [mainMediaId], references: [id], name: "characterMainMedia")
  mainMediaId String? @db.ObjectId

  mediaIds String[] @default([]) @db.ObjectId
  media    Media[]  @relation(fields: [mediaIds], references: [id])
  tagIds   String[] @default([]) @db.ObjectId
  tags     Tag[]    @relation(fields: [tagIds], references: [id])
}

model Media {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  catalogName   String
  fileName      String
  fileExtension String
  mimetype      String
  uuid          String
  author        User   @relation(fields: [authorId], references: [id], name: "userMedia")
  authorId      String @db.ObjectId

  mainFor Character[] @relation(name: "characterMainMedia")

  likes        User?       @relation(fields: [likeIds], references: [id], name: "userLikes")
  likeIds      String[]    @default([]) @db.ObjectId
  characterIds String[]    @db.ObjectId
  characters   Character[] @relation(fields: [characterIds], references: [id])
}

model Tag {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  authorId String @db.ObjectId
  author   User   @relation(fields: [authorId], references: [id], name: "userTags")

  characterIds String[]    @default([]) @db.ObjectId
  characters   Character[] @relation(fields: [characterIds], references: [id])
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String      @id @default(auto()) @map("_id") @db.ObjectId
  username          String      @unique
  password          String      @db.String
  verified          Boolean?    @default(false)
  banned            Boolean?    @default(false)
  createdCharacters Character[] @relation(name: "userCharacters")
  createdTags       Tag[]       @relation(name: "userTags")
  uploadedMedia     Media[]     @relation(name: "userMedia")
  likedMedia        Media[]     @relation(name: "userLikes")
}

model Character {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  mediaIds    String[] @db.ObjectId
  media       Media[]  @relation(fields: [mediaIds], references: [id])
  authorId    String   @db.ObjectId
  author      User     @relation(fields: [authorId], references: [id], name: "userCharacters")
  tagIds      String[] @db.ObjectId
  tags        Tag[]    @relation(fields: [tagIds], references: [id])
}

model Media {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  fileName     String
  fileType     String
  likes        User?       @relation(fields: [likeIds], references: [id], name: "userLikes")
  likeIds      String[]    @db.ObjectId
  characterIds String[]    @db.ObjectId
  characters   Character[] @relation(fields: [characterIds], references: [id])
  author       User        @relation(fields: [authorId], references: [id], name: "userMedia")
  authorId     String      @db.ObjectId
}

model Tag {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  characterIds String[]    @db.ObjectId
  characters   Character[] @relation(fields: [characterIds], references: [id])
  authorId     String      @db.ObjectId
  author       User        @relation(fields: [authorId], references: [id], name: "userTags")
}
